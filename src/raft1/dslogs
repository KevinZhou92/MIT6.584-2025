#!/usr/bin/env python3
import sys
import argparse
import re
from rich.console import Console
from rich.columns import Columns

TOPICS = {
    "TIMR": "bright_black",
    "VOTE": "bright_cyan",
    "LEAD": "yellow",
    "TERM": "green",
    "LOG1": "blue",
    "LOG2": "cyan",
    "CMIT": "magenta",
    "PERS": "white",
    "SNAP": "bright_blue",
    "DROP": "bright_red",
    "CLNT": "bright_green",
    "TEST": "bright_magenta",
    "INFO": "bright_white",
    "WARN": "bright_yellow",
    "ERRO": "red",
    "TRCE": "red",
}

# Argument parser
parser = argparse.ArgumentParser()
parser.add_argument("--file", help="Log file to read instead of stdin")
parser.add_argument("-j", "--just", nargs="*", help="Only show specific topics")
parser.add_argument("--ignore", nargs="*", help="Ignore specific topics")
parser.add_argument("-c", "--n-columns", type=int, help="Print logs by peer columns")
parser.add_argument("--no-color", action="store_true", help="Disable color output")
args = parser.parse_args()

# Determine active topics
topics = set(TOPICS.keys())
if args.just:
    topics = set(args.just)
if args.ignore:
    topics -= set(args.ignore)

# Input source: file or stdin
input_ = open(args.file) if args.file else sys.stdin

# Console setup: force_terminal=True ensures colors even with pipe input
console = Console(force_terminal=not args.no_color)
width = console.size.width
colorize = not args.no_color
n_columns = args.n_columns

# Log parsing loop
panic = False
for line in input_:
    try:
        # time = int(line[:6])
        # topic = line[7:11]
        # msg = line[12:].strip()
        line = line.rstrip()
        match = re.match(r"^(\d+)\s+(\w{4})\s+(.*)", line)
        if not match:
            console.print(line)
            continue

        time_str, topic, msg = match.groups()
        time = int(time_str)

        if topic not in topics:
            continue

        if topic != "TEST" and n_columns:
            # i = int(msg[1])
            match = re.search(r"Server (\d+)", msg)
            if match:
                i = int(match.group(1))
            else:
                i = 0
            # msg = msg[3:]
        else:
            i = 0

        if colorize and topic in TOPICS:
            msg = f"[{TOPICS[topic]}]{msg}[/{TOPICS[topic]}]"

        if n_columns is None or topic == "TEST":
            console.print(f"{time} {msg}")
        else:
            cols = ["" for _ in range(n_columns)]
            cols[i] = msg
            col_width = int(width / n_columns)
            columns = Columns(cols, width=col_width - 1, equal=True, expand=True)
            console.print(columns)

    except Exception:
        if line.startswith("panic"):
            panic = True
        if not panic:
            console.print("-" * console.width)
        console.print(line.rstrip())
